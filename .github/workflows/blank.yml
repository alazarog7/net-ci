name: Docker Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate-and-push:
    runs-on: self-hosted

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 3: Debug Dockerfile presence (helpful for debugging)
    - name: Debug Dockerfile presence
      run: |
        echo "Show location"
        pwd
    # Step 4: Restore
    - name: Restore dependencies
      run: dotnet restore ./Calculator/Calculator.sln

    - name: Build solution
      run: dotnet build ./Calculator/Calculator.sln -c Release --no-restore

    - name: content restored
      run: |
        ls ./Calculator/Calculator.Test/

    # Step 5: Do unit tests
    - name: Run Unit Tests
      run: dotnet test ./Calculator/Calculator.Test/Calculator.Test.csproj -c Release --no-build --verbosity normal

    # Step 6: Build and Tag Docker Image
    - name: Build and Tag Docker Image
      run: |
        # Build the Docker image
        docker build \
          -f ./Calculator/Calculator/Dockerfile \
          -t "${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}" .

    - name: Run Docker Container
      run: |
        docker run -d \
          --name test-container \
          -p 8080:8080 \
          "${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}"
    
    - name: Wait for Container
      run: sleep 5

    - name: Verify Application
      run: |
        curl -f http://0.0.0.0:8080/health || (docker logs test-container && exit 1)
    
    - name: Stop and Remove Container
      run: |
        docker stop test-container
        docker rm test-container

    # Step 7: Push to Docker Hub
    - name: Push to Docker Hub
      run: |
        docker push "${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}"